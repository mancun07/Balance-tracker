{"version":3,"sources":["context/GlobalReducer.js","context/GlobalContext.js","components/AddTransactionForm.js","components/Balance.js","components/Header.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionsList.js","App.js","index.js"],"names":["GlobalReducer","state","action","type","transactions","payload","filter","el","id","map","current","GlobalContext","createContext","initialState","GlobalContextProvider","props","useReducer","dispatch","Provider","value","addTransaction","transaction","deleteTransaction","updateTransaction","setCurrent","clearCurrent","children","AddTransactionForm","useState","text","setText","amount","setAmount","useContext","useEffect","document","querySelectorAll","forEach","style","outline","onSubmit","e","preventDefault","alert","console","log","newTransaction","parseInt","Math","floor","random","class","for","onChange","target","placeholder","updatedTransaction","Balance","total","reduce","acc","toFixed","Header","IncomeExpense","income","expense","className","abs","Transaction","sign","onClick","TransactionsList","length","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34bf7e80.chunk.js","sourcesContent":["const GlobalReducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            } \r\n\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(el => {\r\n                    return el.id !== action.payload\r\n                })\r\n            }\r\n\r\n        case 'UPDATE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.map(el => {\r\n                    return el.id === action.payload.id ? action.payload : el\r\n                })\r\n            }\r\n\r\n        case 'SET_CURRENT':\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n\r\n        case 'CLEAR_CURRENT':\r\n            return {\r\n                ...state,\r\n                current: null\r\n            }\r\n\r\n        default: \r\n        return state\r\n    }\r\n}\r\n\r\nexport default GlobalReducer","import {createContext, useReducer} from 'react';\r\nimport GlobalReducer from './GlobalReducer';\r\nexport const GlobalContext = createContext();\r\n\r\nconst initialState = {\r\n    transactions: [\r\n        // { id: 1, text: 'Purchase of item1', amount: -200 },\r\n        // { id: 2, text: 'Salary1', amount: +500 },\r\n        // { id: 3, text: 'Purchase of item2', amount: -300 },\r\n        // { id: 4, text: 'Salary2', amount: +500 }\r\n    ],\r\n    current: null\r\n}\r\n\r\nconst GlobalContextProvider = (props) => {\r\n    const [state, dispatch] = useReducer(GlobalReducer, initialState)\r\n\r\n    const addTransaction = (transaction) => {\r\n        return  dispatch({type: 'ADD_TRANSACTION', payload: transaction})\r\n    }\r\n\r\n    const deleteTransaction = (id) => {\r\n        return  dispatch({type: 'DELETE_TRANSACTION', payload: id})\r\n    }\r\n\r\n    const updateTransaction = (transaction) => {\r\n        return dispatch({type: 'UPDATE_TRANSACTION', payload: transaction})\r\n    }\r\n\r\n    const setCurrent = (current) => {\r\n        return dispatch({type: 'SET_CURRENT', payload: current})\r\n    }\r\n\r\n    const clearCurrent = () => {\r\n        return dispatch({type: 'CLEAR_CURRENT'})\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            addTransaction: addTransaction,\r\n            deleteTransaction: deleteTransaction,\r\n            updateTransaction: updateTransaction,\r\n            setCurrent: setCurrent,\r\n            clearCurrent,\r\n            current: state.current\r\n        }}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalContextProvider;","import React, {useState, useContext, useEffect} from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n\r\nconst AddTransactionForm = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const {addTransaction, current, updateTransaction, clearCurrent} = useContext(GlobalContext)\r\n\r\n    useEffect(() => {\r\n        if (current) {\r\n            setText(current.text);\r\n            setAmount(current.amount);\r\n            document.querySelectorAll('input').forEach(el => {\r\n                el.style.outline = 'crimson 1px solid';\r\n            })\r\n        }\r\n    }, [current])\r\n\r\n    const onSubmitForUpdate = (e) => {\r\n        e.preventDefault();\r\n        if (text === '' || amount === '') {\r\n            alert('Please, enter the both fields')\r\n        } else {\r\n        const updatedTransaction = {\r\n            text, amount: parseInt(amount),\r\n            id: current.id\r\n        }\r\n        updateTransaction(updatedTransaction);\r\n        setText('');\r\n        setAmount(0);\r\n        clearCurrent();\r\n        document.querySelectorAll('input').forEach(el => {\r\n            el.style.outline = 'none';\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text === '' || amount === '') {\r\n            alert('Please, enter the both fields')\r\n        } else {\r\n            console.log(text, amount)\r\n            let newTransaction = {\r\n                text, amount: parseInt(amount),\r\n                id: Math.floor(Math.random() * 10000)\r\n            }\r\n            console.log(newTransaction)\r\n            addTransaction(newTransaction)\r\n            setText('');\r\n            setAmount(0);\r\n        }\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <h3>Add new transaction</h3>\r\n        <form id=\"form\" onSubmit={onSubmit}>\r\n            <div class=\"form-control\">\r\n                <label for=\"text\">Text</label>\r\n                <input type=\"text\" value={text} onChange={e => setText(e.target.value)} id=\"text\" placeholder=\"Enter text...\" />\r\n            </div>\r\n            <div class=\"form-control\">\r\n                <label for=\"amount\">Amount <br />(negative - expense, positive - income)</label>\r\n                <input type=\"number\" value={amount} id=\"amount\" onChange={e => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n            </div>\r\n            <button class=\"btn\">Add transaction</button>\r\n        </form> \r\n        <form onSubmit={onSubmitForUpdate}>\r\n            <button class=\"btn btn-crimson\">Update transaction</button>\r\n        </form>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default AddTransactionForm\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext'\r\n\r\nconst Balance = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n    const total = transactions\r\n        .map(el => el.amount)\r\n        .reduce((acc, el) => acc += el, 0)\r\n        .toFixed(2)\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 id=\"balance\">${total}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h2>Balance Tracker</h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext'\r\n\r\n\r\nconst IncomeExpense = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n    console.log(transactions)\r\n\r\n    const income = transactions\r\n        .filter(el => el.amount  > 0)\r\n        .map(el => el.amount)\r\n        .reduce((acc, el) => acc += el, 0)\r\n        .toFixed(2)\r\n\r\n    const expense = transactions\r\n        .filter(el => el.amount < 0)\r\n        .map(el => el.amount)\r\n        .reduce((acc, el) => acc += el, 0)\r\n        .toFixed(2) \r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">    \r\n            <div>\r\n            <h4>Income</h4>\r\n            <p id=\"money-plus\" class=\"money plus\">+${income}</p>\r\n            </div>\r\n            <div>\r\n            <h4>Expense</h4>\r\n            <p id=\"money-minus\" class=\"money minus\">-${Math.abs(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpense\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext';\r\n\r\nconst Transaction = ({transaction}) => {\r\n    const {deleteTransaction, setCurrent} = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount > 0 ? '+' : '-' ;\r\n\r\n    return (\r\n        <li class={transaction.amount > 0 ? 'plus' : 'minus'} onClick={()=>setCurrent(transaction)}>\r\n            {transaction.text}\r\n            <span>{sign}${Math.abs(transaction.amount)}</span>\r\n            <button class=\"delete-btn\" onClick={() => deleteTransaction(transaction.id)}>x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../context/GlobalContext'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionsList = () => {\r\n    const {transactions} = useContext(GlobalContext)\r\n\r\n \r\n\r\n    return (\r\n        <>\r\n            <h3>Summary</h3>\r\n            {transactions.length === 0 ? <p>There are no transactions added yet...</p> : ''}\r\n            <ul id=\"list\" class=\"list\">\r\n               {transactions && transactions.length > 0 && transactions.map(transaction => {\r\n                   return <Transaction key={transaction.id} transaction={transaction}/>\r\n               })}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionsList\r\n","import AddTransactionForm from \"./components/AddTransactionForm\";\nimport Balance from \"./components/Balance\";\nimport Header from \"./components/Header\";\nimport IncomeExpense from \"./components/IncomeExpense\";\nimport TransactionsList from \"./components/TransactionsList\";\nimport GlobalContextProvider from \"./context/GlobalContext\";\n\n\nfunction App() {\n  return (\n    <GlobalContextProvider>\n      <div className=\"container\">\n        <Header/>\n        <Balance/>\n        <IncomeExpense/>\n        <TransactionsList/>\n        <AddTransactionForm/>\n      </div>\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}